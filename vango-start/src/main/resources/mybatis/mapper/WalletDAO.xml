<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bayou.service.vango.data.mapper.WalletDAO">
  <resultMap id="BaseResultMap" type="com.bayou.service.vango.data.model.Wallet">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="income" jdbcType="INTEGER" property="income" />
    <result column="outcome" jdbcType="INTEGER" property="outcome" />
    <result column="coin" jdbcType="INTEGER" property="coin" />
    <result column="mtime" jdbcType="INTEGER" property="mtime" />
    <result column="ctime" jdbcType="INTEGER" property="ctime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, income, outcome, coin, mtime, ctime
  </sql>
  <select id="selectByExample" parameterType="com.bayou.service.vango.data.model.WalletExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet
    where `uid` = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wallet
    where `uid` = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bayou.service.vango.data.model.WalletExample">
    delete from wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bayou.service.vango.data.model.Wallet">
    insert into wallet (`uid`, income, outcome, 
      coin, mtime, ctime)
    values (#{uid,jdbcType=BIGINT}, #{income,jdbcType=INTEGER}, #{outcome,jdbcType=INTEGER}, 
      #{coin,jdbcType=INTEGER}, #{mtime,jdbcType=INTEGER}, #{ctime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bayou.service.vango.data.model.Wallet">
    insert into wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="income != null">
        income,
      </if>
      <if test="outcome != null">
        outcome,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="income != null">
        #{income,jdbcType=INTEGER},
      </if>
      <if test="outcome != null">
        #{outcome,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bayou.service.vango.data.model.WalletExample" resultType="java.lang.Long">
    select count(*) from wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wallet
    <set>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.income != null">
        income = #{record.income,jdbcType=INTEGER},
      </if>
      <if test="record.outcome != null">
        outcome = #{record.outcome,jdbcType=INTEGER},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=INTEGER},
      </if>
      <if test="record.mtime != null">
        mtime = #{record.mtime,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wallet
    set `uid` = #{record.uid,jdbcType=BIGINT},
      income = #{record.income,jdbcType=INTEGER},
      outcome = #{record.outcome,jdbcType=INTEGER},
      coin = #{record.coin,jdbcType=INTEGER},
      mtime = #{record.mtime,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayou.service.vango.data.model.Wallet">
    update wallet
    <set>
      <if test="income != null">
        income = #{income,jdbcType=INTEGER},
      </if>
      <if test="outcome != null">
        outcome = #{outcome,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=INTEGER},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayou.service.vango.data.model.Wallet">
    update wallet
    set income = #{income,jdbcType=INTEGER},
      outcome = #{outcome,jdbcType=INTEGER},
      coin = #{coin,jdbcType=INTEGER},
      mtime = #{mtime,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=INTEGER}
    where `uid` = #{uid,jdbcType=BIGINT}
  </update>
</mapper>